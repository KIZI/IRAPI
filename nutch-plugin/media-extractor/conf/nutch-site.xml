<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!-- Put site-specific property overrides in this file. -->

<configuration>

<property>
  <name>storage.data.store.class</name>
  <value>org.apache.gora.hbase.store.HBaseStore</value>
  <description>Default class for storing data</description>
 </property>
 
 
<property>
  <name>http.robots.agents</name>
  <value>LinkedTV,*</value>
  <description></description>
</property>

<property>
  <name>http.agent.name</name>
  <value>LinkedTV</value>
  <description></description>
</property>

<property>
  <name>http.agent.description</name>
  <value>Linkedtv project www.linkedtv.eu</value>
  <description></description>
</property>

<property>
   <name>plugin.folders</name>
   <value>NUTCH_HOME/build/plugins</value>
 </property>
 
 <property>
        <name>plugin.includes</name>
        <value>protocol-http|protocol-httpclient|urlfilter-regex|parse-(xmlhtml|html|more|metatags)|media-extractor|indexer-solr|index-(basic|anchor|metadata|more)|scoring-opic|urlnormalizer-(pass|regex|basic)|language-identifier</value>
</property>
 
 <property>
  <name>htmlparsefilter.order</name>
  <value>org.apache.nutch.parse.MetaTagsParser org.apache.nutch.analysis.lang.HTMLLanguageParser org.apache.nutch.parse.media.MediaExtractorParser
  </value>
  <description>The order by which HTMLParse filters are applied.
  If empty, all available HTMLParse filters (as dictated by properties
  plugin-includes and plugin-excludes above) are loaded and applied in system
  defined order. If not empty, only named filters are loaded and applied
  in given order.
  HTMLParse filter ordering MAY have an impact
  on end result, as some filters could rely on the metadata generated by a previous filter.
  </description>
</property>

<property>
  <name>media.extractor.index.pool.mapping.file.path</name>
  <value>NUTCH_CONFIGURATION_PATH/media_multi_index.properties</value>
  <description>
      mapping configuration for separate index strategy
      example format of line for media type "video" and solr core "videocore" is:
      
	video_solr_url=http://localhost:8983/solr/videocore
	video_batch_size=100
	video_use_auth=false
	   
	for secure access:
	video_use_auth=true
	video_auth_username=username
	video_auth_passwd=password
  </description>
</property>


<property>
  <name>linkedtv.release.version</name>
  <value>2.8</value>
    <description>for debugg purposes</description>
</property>


</configuration>
